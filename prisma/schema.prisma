datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  slug     String
  name    String
  category     String
  subcategory     String
  description     String
  price     Int
  images     Json[]
  features     Json[]
  negotiable     Boolean
  pre_order Boolean
  brand_new Boolean
  views Int @default(0)
  createdAt DateTime @default(now())
  business   Business @relation(fields: [businessId], references: [id])
  businessId String @db.ObjectId
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  firstName    String?
  lastName    String
  username    String @unique
  mobile    String
  email_verified Boolean @default(false)
  image String?
  password String
  role    Role @default(BUYER)
  address Address?
  store  Business?
  reviews Review[]
  wishlist Wishlist[]
  following Follower[]
  createdAt DateTime @default(now())
}

model Business {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  description String?
  logo String?
  slug String? @unique
  type    Type @default(ONLINE)
  vendor    User   @relation(fields: [vendorId], references: [id])
  vendorId    String @db.ObjectId @unique
  location  String?
  createdAt DateTime @default(now())
  products Product[]
  reviews Review[]
  follower Follower[]
}

model Follower {
    id  String @id @default(auto()) @map("_id") @db.ObjectId
    vendor Business   @relation(fields: [followingId], references: [id])
    user User   @relation(fields: [followerId], references: [id])
    followerId String @db.ObjectId
    followingId String @db.ObjectId
    createdAt DateTime @default(now())
}

model Review {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  vendor    Business   @relation(fields: [vendorId], references: [id])
  vendorId  String @db.ObjectId
  user   User @relation(fields: [userId], references: [id])
  userId  String @db.ObjectId
  rating  Int
  comment   String
  createdAt   DateTime @default(now()) 
}

model Wishlist {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    productId   String @db.ObjectId
    userId      String @db.ObjectId 
    user        User @relation(fields: [userId], references: [id])
    createdAt   DateTime @default(now())
}

// Address is an embedded document
type Address {
  street String
  city   String
  state  String
  country  String
}

enum Role {
  BUYER
  SELLER
}

enum Type {
    ONLINE
    PHYSICAL
    HYBRID
}